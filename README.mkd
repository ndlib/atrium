# Atrium

Atrium is a project that has been gestating for a while. It's coming along well
but is still a ways off of a "1.0" release. For more information see
`ROADMAP.mkd`. The development process is coordinated in a [public-facing
JIRA][1]

## Getting Started

Make sure [blacklight](https://github.com/projectblacklight/blacklight) is
installed. You will need an ApplicationController#current_user method, which is
easily provided by Devise and the Blacklight devise installation option.

    $ rake atrium:install:migrations
    $ rails generate atrium:install
    $ git commit
    $ rake db:migrate

## What it's for

Atrium is a tool for extending a [Blacklight][2]-enabled application by:

  - Grouping items
  - Adding context
  - Customizing presentation

Atrium provides four mechanisms to achieve this end:

  - Collections
  - Exhibits
  - Showcases
  - Themes

### Collections
A collection contains a subset of the items in the complete index as defined by
a Solr query. An explicitly declared subset of the total facets can be applied
to these items. A collection description and or featured items form the
collection can be displayed at the top level collection page. Collections can be
themed independently of the base application and other collections.

### Exhibits
An exhibit is a customizable view of a single topic (as defined by a facet),
further scoped by an optional Solr query. An exhibit defines it's own
hierarchical list of facets. An exhibit may also have a description and a list
of featured items.

### Showcases
A showcase is a container for storing feature items and descriptions. A showcase
can be attached to a collection, exhibit, or to specific combinations of
selected facets and facet values within an exhibit. There can be multiple
showcases in an exhibit.

### Themes
At present, themes are a wrapper around the existing rails templating system. A
theme is simply a [nested layout][3] that works in conjunction with some `yeild`
blocks in the base atrium layout. This is a pretty flexible solution but
requires the implementer to know how layouts and rendering work in Rails. It
also means you have to re-deploy the application every time you want to change
how it looks.

## Acknowledgements
Thanks to [Hiten Parmar][4] for the gem name. The [original atrium gem][5] was
an instant web server.

[1]: https://jira.duraspace.org/browse/HYGALL
[2]: https://github.com/projectblacklight/blacklight
[3]: http://guides.rubyonrails.org/layouts_and_rendering.html#using-nested-layouts
[4]: http://www.hitenparmar.com/
[5]: https://github.com/hrp/atrium
